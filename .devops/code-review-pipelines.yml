# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

# Automatically triggered on PR
# https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=azure-devops&tabs=schema%2Cparameter-schema#pr-trigger
trigger: none

pool:
  vmImage: 'ubuntu-22.04'

variables:
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'


  poolImage: 'pagopa-dev-loadtest-linux'
  apiConfigSubscriptionKey: '$(DEV_API_CONFIG_SUBSCRIPTION_KEY)'
  gpdSubscriptionKey: '$(DEV_GPD_SUBSCRIPTION_KEY)'
  gpsSubscriptionKey: '$(DEV_GPS_SUBSCRIPTION_KEY)'
  donationsSubscriptionKey: '$(DEV_DONATIONS_SUBSCRIPTION_KEY)'
  iuvGeneratorSubscriptionKey: '$(DEV_IUV_GENERATOR_SUBSCRIPTION_KEY)'
  restPaymentsSubscriptionKey: '$(DEV_PAYMENTS_REST_SUBSCRIPTION_KEY)'
  soapPaymentsSubscriptionKey: '$(DEV_PAYMENTS_SOAP_SUBSCRIPTION_KEY)'
  gpdHost: 'https://api.dev.platform.pagopa.it/gpd/api/v1'
  gpsHost: 'https://api.dev.platform.pagopa.it/gps/spontaneous-payments-service/v1'
  apiConfigHost: 'https://api.dev.platform.pagopa.it/apiconfig/auth/api/v1'

stages:
  - stage: Test
    jobs:
      - job: unit_test
        steps:
          - checkout: self
            persistCredentials: true

          - task: Cache@2
            inputs:
              key: 'maven | "$(Agent.OS)" | pom.xml'
              restoreKeys: |
                maven | "$(Agent.OS)"
                maven
              path: $(MAVEN_CACHE_FOLDER)
            displayName: Cache Maven local repo

          - task: SonarCloudPrepare@1
            displayName: 'Prepare SonarCloud analysis configuration'
            inputs:
              SonarCloud: '$(SONARCLOUD_SERVICE_CONN)'
              organization: '$(SONARCLOUD_ORG)'
              scannerMode: Other
              extraProperties: |
                sonar.projectKey=$(SONARCLOUD_PROJECT_KEY)
                sonar.projectName=$(SONARCLOUD_PROJECT_NAME)
                sonar.coverage.exclusions=**/config/*,**/*Mock*,**/model/**,**/entity/*
                sonar.cpd.exclusions=**/model/**,**/entity/*

          - task: Maven@3
            displayName: 'Run Junit Test'
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'clean verify -DGPD_SUBSCRIPTION_KEY=$(gpdSubscriptionKey) -DGPS_SUBSCRIPTION_KEY=$(gpsSubscriptionKey) -DAPICONFIG_SUBSCRIPTION_KEY=$(apiConfigSubscriptionKey) -DGPD_HOST=$(gpdHost) -DGPS_HOST=$(gpsHost) -DAPI_CONFIG_HOST=$(apiConfigHost)'
              publishJUnitResults: true
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              codeCoverageToolOption: 'JaCoCo'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.11'
              mavenVersionOption: 'Default'
              mavenOptions: '-Xmx3072m $(MAVEN_OPTS)'
              mavenAuthenticateFeed: false
              effectivePomSkip: false
              sonarQubeRunAnalysis: true
              isJacocoCoverageReportXML: true
              sqMavenPluginVersionChoice: 'latest'

          - task: SonarCloudPublish@1
            displayName: 'Publish SonarCloud results on build summary'
            inputs:
              pollingTimeoutSec: '300'

      - job: smoke_tests
        pool:
          name: $(poolImage)
        dependsOn: # parallel running job
        steps:
          - checkout: self
            persistCredentials: true

          - task: Docker@2
            displayName: "Docker login"
            inputs:
              containerRegistry: "$(DEV_CONTAINER_REGISTRY_SERVICE_CONN)"
              command: "login"

          - task: Bash@3
            displayName: 'Run Integration Tests'
            inputs:
              targetType: 'inline'
              script: |
                cd ./integration-test
                sh run_integration_test.sh local $(apiConfigSubscriptionKey) $(gpdSubscriptionKey) $(gpsSubscriptionKey) $(donationsSubscriptionKey) $(iuvGeneratorSubscriptionKey) $(restPaymentsSubscriptionKey) $(soapPaymentsSubscriptionKey)
